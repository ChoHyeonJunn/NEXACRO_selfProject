<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="Form_Left" width="225" height="673" titletext="Form_Left" onload="Form_Left_onload" locale="aa_DJ" dragscrolltype="horz" scrolltype="both" scrollbartype="none none" ondrag="Form_Left_ondrag" ondragmove="Form_Left_ondragmove" background="#f4f4f4">
    <Layouts>
      <Layout width="225" height="673" screenid="Desktop_screen">
        <Grid id="Grid00" taborder="1" left="0" top="0" height="100%" binddataset="gds_menu" treeinitstatus="expand,all" treeusecheckbox="false" oncellclick="Grid00_oncellclick" scrollbartype="none none" right="20" autofittype="col">
          <Formats>
            <Format id="default">
              <Columns>
                <Column size="225"/>
              </Columns>
              <Rows>
                <Row size="24"/>
              </Rows>
              <Band id="body">
                <Cell text="bind:MENU_NAME" edittype="tree" displaytype="treeitemcontrol" treelevel="bind:MENU_LEVEL"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
        <Button id="ButtonSize" taborder="0" text="" top="311" height="50" cursor="e-resize" onlbuttondown="ButtonSize_onlbuttondown" border="0px none" background="url('imagerc::directions.png') no-repeat center center" tooltiptype="default" onclick="ButtonSize_onclick" width="50" right="-5" onlbuttonup="ButtonSize_onlbuttonup"/>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.application = null;

/************************************************************************
 * event : 페이지 로드
 ************************************************************************/
this.Form_Left_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{	
	this.application = nexacro.getApplication();
	
	// 초기 서브메뉴 셋팅
	this.fn_setLeftMenu("010000");
};

// function : left메뉴 데이터셋 셋팅
this.fn_setLeftMenu = function(pMENU_ID)
{
	// left 메뉴에 적용될 그리드의 dataset 필터링
	this.application.gds_menu.filter("MENU_ID.substr(0,2)=='" + pMENU_ID.substr(0,2) + "'")
	
	// top 메뉴에 선택된 버튼 색 변경
	this.application.TopFrame.form.fn_setBtnColor(pMENU_ID)
}

// function : 메뉴 포커스 변경
this.fn_setGridFocus = function(pMENU_ID)
{
	// left메뉴 데이터 다시 셋팅
	this.fn_setLeftMenu(pMENU_ID);
	
	// left메뉴 포커스 변경
	var Row = this.application.gds_menu.findRow("MENU_ID", pMENU_ID);
	this.Grid00.selectRow(Row);
}

/************************************************************************
 * event : 좌측 영역 화면의 Grid 컴포넌트 oncellclick(셀 클릭) 이벤트
 ************************************************************************/
this.Grid00_oncellclick = function(obj:nexacro.Grid,e:nexacro.GridClickEventInfo)
{
	var MENU_ID = this.application.gds_menu.getColumn(e.row, "MENU_ID");
	this.fn_openForm(MENU_ID);
};

// function : 폼 오픈
this.fn_openForm = function(MENU_ID)
{	
	var objNaviFrame = this.application.NaviFrame;
	var objWorkFrame = this.application.WorkFrame;
	
	// 메뉴 관련 정보 
	var menuDs = this.application.gds_menu;
	
	var Row = menuDs.findRow("MENU_ID", MENU_ID);
	var MENU_NAME  = menuDs.getColumn(Row, "MENU_NAME");
	var MENU_LEVEL = menuDs.getColumn(Row, "MENU_LEVEL");
	var FORM_URL  = menuDs.getColumn(Row, "FORM_URL");
	var UP_MENU_ID = menuDs.getColumn(Row, "UP_MENU_ID");
	
	// 메뉴 레벨이 2보다 작은 경우 - 메뉴 트리 경로이다.
	if(MENU_LEVEL < 2) return;
		
	// 선택한 메뉴가 이미 열려있을 경우 
	var arrObj = objWorkFrame.all;
	for(var i=0; i<arrObj.length; i++)
    {
        if(arrObj[i].name == MENU_ID){
            arrObj[i].setFocus();
            return;
        }
    }
	
	// 부모 메뉴 관련 정보
	var upRow = menuDs.findRow("MENU_ID", UP_MENU_ID);
	var UP_MENU_NAME  = menuDs.getColumn(upRow, "MENU_NAME");
	var UP_UP_MENU_ID = menuDs.getColumn(upRow, "UP_MENU_ID");
	
	var upupRow = menuDs.findRow("MENU_ID", UP_UP_MENU_ID);
	var UP_UP_MENU_NAME  = menuDs.getColumn(upupRow, "MENU_NAME");
	
	// form 추가 (FrameBase::Form_Work 를 열고 Param 전달 - Form_Work에서 전달받은 url을 연다)
	var oParam = { MENU_ID : MENU_ID, 
				   MENU_NAME : MENU_NAME, 
				   FORM_URL : FORM_URL,
				   TITLE_TEXT : UP_UP_MENU_NAME + " > " + UP_MENU_NAME + " > " + MENU_NAME
				   };	
			   
	var objChildFrame = new ChildFrame(MENU_ID, 0, 0, 824, 638);
	
    objWorkFrame.addChild(objChildFrame.name, objChildFrame);
	
	objChildFrame.param = oParam;
    objChildFrame.set_formurl("FrameBase::Form_Work.xfdl");
    objChildFrame.set_resizable(true);
    objChildFrame.set_showtitlebar(false);
    objChildFrame.set_titletext(UP_UP_MENU_NAME + " > " + UP_MENU_NAME + " > " + MENU_NAME);
    objChildFrame.set_openstatus("maximize");
    objChildFrame.show();
	
	// tab 추가
	objNaviFrame.form.fn_AddTabPage(MENU_ID, MENU_NAME);
	objNaviFrame.form.btnArrangeMax.click();	// max arrange 버튼 클릭이벤트 강제 발생
}

/************************************************************************
 * event : 버튼 클릭으로 숨기기/보이기
 ************************************************************************/
this.ButtonSize_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	if(this.blockButtonClick == 0)	return;
	
	var arrSeparateSize = this.application.HFrameSet00.separatesize.split(',');
	
	if(arrSeparateSize[0] > 20)
	{
		this.application.HFrameSet00.set_separatesize("20,*");
	}
	else
	{
		this.application.HFrameSet00.set_separatesize("225,*");
	}
};

/************************************************************************
 * event : 버튼 드래그로 left사이즈 조절
 ************************************************************************/
this.isButtonDrag = false;	// left frame 에서 버튼을 이용해서만 드래그 이벤트가 발생하도록 flag
this.blockButtonClick;		// 2 : 초기화 / 1 : 드래그없이버튼업 / 0 : 드래그후버튼업

this.ButtonSize_onlbuttondown = function(obj:nexacro.Button,e:nexacro.MouseEventInfo)
{
	this.isButtonDrag = true;	
	this.blockButtonClick = 2;
};
this.ButtonSize_onlbuttonup = function(obj:nexacro.Button,e:nexacro.MouseEventInfo)
{
	this.isButtonDrag = false;	
	this.blockButtonClick -= 1;
};

this.Form_Left_ondrag = function(obj:nexacro.Form,e:nexacro.DragEventInfo)
{
	if(this.isButtonDrag)	return true;
	else					return false;
};
this.Form_Left_ondragmove = function(obj:nexacro.Form,e:nexacro.DragEventInfo)
{	
	if(e.clientx < 50) return;
	this.application.HFrameSet00.set_separatesize((e.clientx + 20) + ",*");	
	this.blockButtonClick = 1;
};


]]></Script>
  </Form>
</FDL>
